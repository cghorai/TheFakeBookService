// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/proto/v1/fakebookservice.proto

package server

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HealthRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"xxx_NoUnkeyedLiteral"`
	XXX_unrecognized     []byte   `json:"-" bson:"xxx_Unrecognized"`
	XXX_sizecache        int32    `json:"-" bson:"xxx_Sizecache"`
}

func (m *HealthRequest) Reset()         { *m = HealthRequest{} }
func (m *HealthRequest) String() string { return proto.CompactTextString(m) }
func (*HealthRequest) ProtoMessage()    {}
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_735f82b33ae8836f, []int{0}
}

func (m *HealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthRequest.Unmarshal(m, b)
}
func (m *HealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthRequest.Marshal(b, m, deterministic)
}
func (m *HealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthRequest.Merge(m, src)
}
func (m *HealthRequest) XXX_Size() int {
	return xxx_messageInfo_HealthRequest.Size(m)
}
func (m *HealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthRequest proto.InternalMessageInfo

type HealthReply struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty" bson:"status"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"xxx_NoUnkeyedLiteral"`
	XXX_unrecognized     []byte   `json:"-" bson:"xxx_Unrecognized"`
	XXX_sizecache        int32    `json:"-" bson:"xxx_Sizecache"`
}

func (m *HealthReply) Reset()         { *m = HealthReply{} }
func (m *HealthReply) String() string { return proto.CompactTextString(m) }
func (*HealthReply) ProtoMessage()    {}
func (*HealthReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_735f82b33ae8836f, []int{1}
}

func (m *HealthReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthReply.Unmarshal(m, b)
}
func (m *HealthReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthReply.Marshal(b, m, deterministic)
}
func (m *HealthReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthReply.Merge(m, src)
}
func (m *HealthReply) XXX_Size() int {
	return xxx_messageInfo_HealthReply.Size(m)
}
func (m *HealthReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthReply.DiscardUnknown(m)
}

var xxx_messageInfo_HealthReply proto.InternalMessageInfo

func (m *HealthReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type FakeNewsRequestWrapper struct {
	FakeNewsRequest      *FakeNewsRequest `protobuf:"bytes,1,opt,name=fakeNewsRequest,proto3" json:"fakeNewsRequest,omitempty" bson:"fakeNewsRequest"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-" bson:"xxx_NoUnkeyedLiteral"`
	XXX_unrecognized     []byte           `json:"-" bson:"xxx_Unrecognized"`
	XXX_sizecache        int32            `json:"-" bson:"xxx_Sizecache"`
}

func (m *FakeNewsRequestWrapper) Reset()         { *m = FakeNewsRequestWrapper{} }
func (m *FakeNewsRequestWrapper) String() string { return proto.CompactTextString(m) }
func (*FakeNewsRequestWrapper) ProtoMessage()    {}
func (*FakeNewsRequestWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_735f82b33ae8836f, []int{2}
}

func (m *FakeNewsRequestWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FakeNewsRequestWrapper.Unmarshal(m, b)
}
func (m *FakeNewsRequestWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FakeNewsRequestWrapper.Marshal(b, m, deterministic)
}
func (m *FakeNewsRequestWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FakeNewsRequestWrapper.Merge(m, src)
}
func (m *FakeNewsRequestWrapper) XXX_Size() int {
	return xxx_messageInfo_FakeNewsRequestWrapper.Size(m)
}
func (m *FakeNewsRequestWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_FakeNewsRequestWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_FakeNewsRequestWrapper proto.InternalMessageInfo

func (m *FakeNewsRequestWrapper) GetFakeNewsRequest() *FakeNewsRequest {
	if m != nil {
		return m.FakeNewsRequest
	}
	return nil
}

type RatingRequestWrapper struct {
	RatingRequest        *RatingRequest `protobuf:"bytes,1,opt,name=ratingRequest,proto3" json:"ratingRequest,omitempty" bson:"ratingRequest"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-" bson:"xxx_NoUnkeyedLiteral"`
	XXX_unrecognized     []byte         `json:"-" bson:"xxx_Unrecognized"`
	XXX_sizecache        int32          `json:"-" bson:"xxx_Sizecache"`
}

func (m *RatingRequestWrapper) Reset()         { *m = RatingRequestWrapper{} }
func (m *RatingRequestWrapper) String() string { return proto.CompactTextString(m) }
func (*RatingRequestWrapper) ProtoMessage()    {}
func (*RatingRequestWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_735f82b33ae8836f, []int{3}
}

func (m *RatingRequestWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RatingRequestWrapper.Unmarshal(m, b)
}
func (m *RatingRequestWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RatingRequestWrapper.Marshal(b, m, deterministic)
}
func (m *RatingRequestWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RatingRequestWrapper.Merge(m, src)
}
func (m *RatingRequestWrapper) XXX_Size() int {
	return xxx_messageInfo_RatingRequestWrapper.Size(m)
}
func (m *RatingRequestWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_RatingRequestWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_RatingRequestWrapper proto.InternalMessageInfo

func (m *RatingRequestWrapper) GetRatingRequest() *RatingRequest {
	if m != nil {
		return m.RatingRequest
	}
	return nil
}

type FakeNewsRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	UserId               string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty" bson:"userId"`
	FakeNewsUrl          string   `protobuf:"bytes,3,opt,name=fakeNewsUrl,proto3" json:"fakeNewsUrl,omitempty" bson:"fakeNewsUrl"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"xxx_NoUnkeyedLiteral"`
	XXX_unrecognized     []byte   `json:"-" bson:"xxx_Unrecognized"`
	XXX_sizecache        int32    `json:"-" bson:"xxx_Sizecache"`
}

func (m *FakeNewsRequest) Reset()         { *m = FakeNewsRequest{} }
func (m *FakeNewsRequest) String() string { return proto.CompactTextString(m) }
func (*FakeNewsRequest) ProtoMessage()    {}
func (*FakeNewsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_735f82b33ae8836f, []int{4}
}

func (m *FakeNewsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FakeNewsRequest.Unmarshal(m, b)
}
func (m *FakeNewsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FakeNewsRequest.Marshal(b, m, deterministic)
}
func (m *FakeNewsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FakeNewsRequest.Merge(m, src)
}
func (m *FakeNewsRequest) XXX_Size() int {
	return xxx_messageInfo_FakeNewsRequest.Size(m)
}
func (m *FakeNewsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FakeNewsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FakeNewsRequest proto.InternalMessageInfo

func (m *FakeNewsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FakeNewsRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *FakeNewsRequest) GetFakeNewsUrl() string {
	if m != nil {
		return m.FakeNewsUrl
	}
	return ""
}

type RatingRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	FakeNewsId           string   `protobuf:"bytes,2,opt,name=fakeNewsId,proto3" json:"fakeNewsId,omitempty" bson:"fakeNewsId"`
	Rating               string   `protobuf:"bytes,3,opt,name=rating,proto3" json:"rating,omitempty" bson:"rating"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"xxx_NoUnkeyedLiteral"`
	XXX_unrecognized     []byte   `json:"-" bson:"xxx_Unrecognized"`
	XXX_sizecache        int32    `json:"-" bson:"xxx_Sizecache"`
}

func (m *RatingRequest) Reset()         { *m = RatingRequest{} }
func (m *RatingRequest) String() string { return proto.CompactTextString(m) }
func (*RatingRequest) ProtoMessage()    {}
func (*RatingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_735f82b33ae8836f, []int{5}
}

func (m *RatingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RatingRequest.Unmarshal(m, b)
}
func (m *RatingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RatingRequest.Marshal(b, m, deterministic)
}
func (m *RatingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RatingRequest.Merge(m, src)
}
func (m *RatingRequest) XXX_Size() int {
	return xxx_messageInfo_RatingRequest.Size(m)
}
func (m *RatingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RatingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RatingRequest proto.InternalMessageInfo

func (m *RatingRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RatingRequest) GetFakeNewsId() string {
	if m != nil {
		return m.FakeNewsId
	}
	return ""
}

func (m *RatingRequest) GetRating() string {
	if m != nil {
		return m.Rating
	}
	return ""
}

type FakeNewsId struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	NewsId               string   `protobuf:"bytes,2,opt,name=newsId,proto3" json:"newsId,omitempty" bson:"newsId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"xxx_NoUnkeyedLiteral"`
	XXX_unrecognized     []byte   `json:"-" bson:"xxx_Unrecognized"`
	XXX_sizecache        int32    `json:"-" bson:"xxx_Sizecache"`
}

func (m *FakeNewsId) Reset()         { *m = FakeNewsId{} }
func (m *FakeNewsId) String() string { return proto.CompactTextString(m) }
func (*FakeNewsId) ProtoMessage()    {}
func (*FakeNewsId) Descriptor() ([]byte, []int) {
	return fileDescriptor_735f82b33ae8836f, []int{6}
}

func (m *FakeNewsId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FakeNewsId.Unmarshal(m, b)
}
func (m *FakeNewsId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FakeNewsId.Marshal(b, m, deterministic)
}
func (m *FakeNewsId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FakeNewsId.Merge(m, src)
}
func (m *FakeNewsId) XXX_Size() int {
	return xxx_messageInfo_FakeNewsId.Size(m)
}
func (m *FakeNewsId) XXX_DiscardUnknown() {
	xxx_messageInfo_FakeNewsId.DiscardUnknown(m)
}

var xxx_messageInfo_FakeNewsId proto.InternalMessageInfo

func (m *FakeNewsId) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FakeNewsId) GetNewsId() string {
	if m != nil {
		return m.NewsId
	}
	return ""
}

type FakeNewsResponse struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	FakeNewsUrl          string   `protobuf:"bytes,2,opt,name=fakeNewsUrl,proto3" json:"fakeNewsUrl,omitempty" bson:"fakeNewsUrl"`
	Rating               string   `protobuf:"bytes,3,opt,name=rating,proto3" json:"rating,omitempty" bson:"rating"`
	XXX_NoUnkeyedLiteral struct{} `json:"-" bson:"xxx_NoUnkeyedLiteral"`
	XXX_unrecognized     []byte   `json:"-" bson:"xxx_Unrecognized"`
	XXX_sizecache        int32    `json:"-" bson:"xxx_Sizecache"`
}

func (m *FakeNewsResponse) Reset()         { *m = FakeNewsResponse{} }
func (m *FakeNewsResponse) String() string { return proto.CompactTextString(m) }
func (*FakeNewsResponse) ProtoMessage()    {}
func (*FakeNewsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_735f82b33ae8836f, []int{7}
}

func (m *FakeNewsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FakeNewsResponse.Unmarshal(m, b)
}
func (m *FakeNewsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FakeNewsResponse.Marshal(b, m, deterministic)
}
func (m *FakeNewsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FakeNewsResponse.Merge(m, src)
}
func (m *FakeNewsResponse) XXX_Size() int {
	return xxx_messageInfo_FakeNewsResponse.Size(m)
}
func (m *FakeNewsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FakeNewsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FakeNewsResponse proto.InternalMessageInfo

func (m *FakeNewsResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *FakeNewsResponse) GetFakeNewsUrl() string {
	if m != nil {
		return m.FakeNewsUrl
	}
	return ""
}

func (m *FakeNewsResponse) GetRating() string {
	if m != nil {
		return m.Rating
	}
	return ""
}

func init() {
	proto.RegisterType((*HealthRequest)(nil), "proto.HealthRequest")
	proto.RegisterType((*HealthReply)(nil), "proto.HealthReply")
	proto.RegisterType((*FakeNewsRequestWrapper)(nil), "proto.FakeNewsRequestWrapper")
	proto.RegisterType((*RatingRequestWrapper)(nil), "proto.RatingRequestWrapper")
	proto.RegisterType((*FakeNewsRequest)(nil), "proto.FakeNewsRequest")
	proto.RegisterType((*RatingRequest)(nil), "proto.RatingRequest")
	proto.RegisterType((*FakeNewsId)(nil), "proto.FakeNewsId")
	proto.RegisterType((*FakeNewsResponse)(nil), "proto.FakeNewsResponse")
}

func init() { proto.RegisterFile("api/proto/v1/fakebookservice.proto", fileDescriptor_735f82b33ae8836f) }

var fileDescriptor_735f82b33ae8836f = []byte{
	// 484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0xc7, 0x95, 0x05, 0x2a, 0x31, 0x49, 0x9a, 0x60, 0x55, 0x21, 0xa4, 0x14, 0x15, 0x57, 0x48,
	0xf4, 0xd2, 0x15, 0x85, 0x53, 0x4e, 0x50, 0x50, 0x45, 0x2f, 0x08, 0x16, 0x41, 0x25, 0x3e, 0x0e,
	0x6e, 0x77, 0x9a, 0x58, 0xbb, 0xac, 0x8d, 0xed, 0xa4, 0x8a, 0x10, 0x17, 0x5e, 0x81, 0x23, 0x8f,
	0xc5, 0x2b, 0xf0, 0x20, 0x28, 0xb6, 0x37, 0xdd, 0x75, 0x12, 0x71, 0xe0, 0xb4, 0x9a, 0xaf, 0xff,
	0x6f, 0xc6, 0x1e, 0x2f, 0x50, 0x26, 0x79, 0x2c, 0x95, 0x30, 0x22, 0x9e, 0x3e, 0x8a, 0x2f, 0x58,
	0x86, 0x67, 0x42, 0x64, 0x1a, 0xd5, 0x94, 0x9f, 0xe3, 0x81, 0x0d, 0x90, 0x1b, 0xf6, 0x33, 0xb8,
	0x3b, 0x12, 0x62, 0x94, 0x63, 0x3c, 0xaf, 0x60, 0x45, 0x21, 0x0c, 0x33, 0x5c, 0x14, 0xda, 0x25,
	0xd1, 0x0e, 0xb4, 0x5f, 0x22, 0xcb, 0xcd, 0x38, 0xc1, 0xaf, 0x13, 0xd4, 0x86, 0x3e, 0x80, 0x66,
	0xe9, 0x90, 0xf9, 0x8c, 0xf4, 0x60, 0x43, 0x1b, 0x66, 0x26, 0xba, 0xdf, 0xd8, 0x6d, 0x3c, 0xbc,
	0x99, 0x78, 0x8b, 0x7e, 0x80, 0xde, 0x31, 0xcb, 0xf0, 0x15, 0x5e, 0x6a, 0x5f, 0x79, 0xaa, 0x98,
	0x94, 0xa8, 0xc8, 0x53, 0xe8, 0x5c, 0xd4, 0x23, 0xb6, 0xb4, 0x79, 0xd8, 0x73, 0xc8, 0x83, 0xa0,
	0x2e, 0x09, 0xd3, 0x69, 0x02, 0x5b, 0x09, 0x33, 0xbc, 0x18, 0x05, 0xca, 0x43, 0x68, 0xab, 0xaa,
	0xdf, 0xeb, 0x6e, 0x79, 0xdd, 0x5a, 0x4d, 0x52, 0x4f, 0xa5, 0x1f, 0xa1, 0x13, 0x70, 0xc9, 0x26,
	0x44, 0x3c, 0xf5, 0x63, 0x45, 0x3c, 0x9d, 0x8f, 0x3a, 0xd1, 0xa8, 0x4e, 0xd2, 0x7e, 0xe4, 0x46,
	0x75, 0x16, 0xd9, 0x85, 0x66, 0xd9, 0xe1, 0x3b, 0x95, 0xf7, 0xaf, 0xd9, 0x60, 0xd5, 0x45, 0x4f,
	0xa1, 0x5d, 0x83, 0x2f, 0x49, 0xdf, 0x03, 0x28, 0xf3, 0x17, 0xf2, 0x15, 0xcf, 0x1c, 0xed, 0xda,
	0xf5, 0xea, 0xde, 0xa2, 0x4f, 0x00, 0x8e, 0xaf, 0xb2, 0x56, 0x34, 0x5c, 0x54, 0x15, 0xbd, 0x45,
	0x3f, 0x41, 0xf7, 0x6a, 0x56, 0x2d, 0x45, 0xa1, 0x71, 0xa9, 0x36, 0x18, 0x2a, 0x5a, 0x1a, 0x6a,
	0x5d, 0x4f, 0x87, 0xbf, 0xae, 0xbb, 0xa3, 0x3c, 0x12, 0x22, 0x7b, 0xeb, 0x16, 0x8e, 0x48, 0x68,
	0x3e, 0x4b, 0xd3, 0x12, 0x4a, 0x76, 0x56, 0xdf, 0xb4, 0xbf, 0xc7, 0xc1, 0xed, 0xa5, 0xb0, 0x6b,
	0x92, 0xee, 0xff, 0xf8, 0xfd, 0xe7, 0x67, 0xb4, 0x47, 0xbb, 0x76, 0x59, 0xfd, 0x62, 0xcf, 0x87,
	0x1a, 0x86, 0x3b, 0x42, 0x66, 0xb0, 0xf9, 0x02, 0x73, 0x34, 0xf8, 0xdf, 0xd0, 0xd8, 0x42, 0xf7,
	0x69, 0xaf, 0x84, 0x2a, 0xfc, 0x22, 0xa6, 0xb8, 0x1e, 0xcd, 0xa1, 0x95, 0xb0, 0x0a, 0x78, 0x7b,
	0xd5, 0xfe, 0xfd, 0x13, 0xbb, 0x67, 0xb1, 0x3b, 0xb4, 0xb5, 0xc0, 0x32, 0x83, 0xc3, 0xfa, 0xd6,
	0x92, 0xcf, 0xd0, 0x7a, 0xcf, 0xf1, 0x72, 0x81, 0xba, 0x15, 0xa8, 0x9d, 0xa4, 0xeb, 0x01, 0xf7,
	0x2d, 0x60, 0x9b, 0xdc, 0x09, 0x0f, 0x33, 0xfe, 0xe6, 0xf6, 0xe4, 0x3b, 0x79, 0x53, 0xbe, 0xf5,
	0xe7, 0x63, 0x3c, 0xcf, 0x48, 0xf9, 0x90, 0x6a, 0x3f, 0x84, 0x01, 0x09, 0xbc, 0x32, 0x9f, 0xd1,
	0xbe, 0xd5, 0x26, 0xa4, 0x1b, 0xf3, 0xc2, 0xa0, 0x2a, 0x58, 0x1e, 0x8f, 0x6d, 0xf8, 0x28, 0x7a,
	0xdd, 0x38, 0xdb, 0xb0, 0x05, 0x8f, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x07, 0x8d, 0xfc,
	0xa5, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FakeBookServiceClient is the client API for FakeBookService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FakeBookServiceClient interface {
	AddFakeNews(ctx context.Context, in *FakeNewsRequestWrapper, opts ...grpc.CallOption) (*FakeNewsResponse, error)
	DeleteFakeNews(ctx context.Context, in *FakeNewsRequestWrapper, opts ...grpc.CallOption) (*FakeNewsResponse, error)
	RateFakeNews(ctx context.Context, in *RatingRequestWrapper, opts ...grpc.CallOption) (*FakeNewsResponse, error)
	ViewFakeNews(ctx context.Context, in *FakeNewsId, opts ...grpc.CallOption) (*FakeNewsResponse, error)
	HealthCheck(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthReply, error)
}

type fakeBookServiceClient struct {
	cc *grpc.ClientConn
}

func NewFakeBookServiceClient(cc *grpc.ClientConn) FakeBookServiceClient {
	return &fakeBookServiceClient{cc}
}

func (c *fakeBookServiceClient) AddFakeNews(ctx context.Context, in *FakeNewsRequestWrapper, opts ...grpc.CallOption) (*FakeNewsResponse, error) {
	out := new(FakeNewsResponse)
	err := c.cc.Invoke(ctx, "/proto.FakeBookService/AddFakeNews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fakeBookServiceClient) DeleteFakeNews(ctx context.Context, in *FakeNewsRequestWrapper, opts ...grpc.CallOption) (*FakeNewsResponse, error) {
	out := new(FakeNewsResponse)
	err := c.cc.Invoke(ctx, "/proto.FakeBookService/DeleteFakeNews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fakeBookServiceClient) RateFakeNews(ctx context.Context, in *RatingRequestWrapper, opts ...grpc.CallOption) (*FakeNewsResponse, error) {
	out := new(FakeNewsResponse)
	err := c.cc.Invoke(ctx, "/proto.FakeBookService/RateFakeNews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fakeBookServiceClient) ViewFakeNews(ctx context.Context, in *FakeNewsId, opts ...grpc.CallOption) (*FakeNewsResponse, error) {
	out := new(FakeNewsResponse)
	err := c.cc.Invoke(ctx, "/proto.FakeBookService/ViewFakeNews", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fakeBookServiceClient) HealthCheck(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthReply, error) {
	out := new(HealthReply)
	err := c.cc.Invoke(ctx, "/proto.FakeBookService/HealthCheck", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FakeBookServiceServer is the server API for FakeBookService service.
type FakeBookServiceServer interface {
	AddFakeNews(context.Context, *FakeNewsRequestWrapper) (*FakeNewsResponse, error)
	DeleteFakeNews(context.Context, *FakeNewsRequestWrapper) (*FakeNewsResponse, error)
	RateFakeNews(context.Context, *RatingRequestWrapper) (*FakeNewsResponse, error)
	ViewFakeNews(context.Context, *FakeNewsId) (*FakeNewsResponse, error)
	HealthCheck(context.Context, *HealthRequest) (*HealthReply, error)
}

// UnimplementedFakeBookServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFakeBookServiceServer struct {
}

func (*UnimplementedFakeBookServiceServer) AddFakeNews(ctx context.Context, req *FakeNewsRequestWrapper) (*FakeNewsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddFakeNews not implemented")
}
func (*UnimplementedFakeBookServiceServer) DeleteFakeNews(ctx context.Context, req *FakeNewsRequestWrapper) (*FakeNewsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteFakeNews not implemented")
}
func (*UnimplementedFakeBookServiceServer) RateFakeNews(ctx context.Context, req *RatingRequestWrapper) (*FakeNewsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RateFakeNews not implemented")
}
func (*UnimplementedFakeBookServiceServer) ViewFakeNews(ctx context.Context, req *FakeNewsId) (*FakeNewsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ViewFakeNews not implemented")
}
func (*UnimplementedFakeBookServiceServer) HealthCheck(ctx context.Context, req *HealthRequest) (*HealthReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HealthCheck not implemented")
}

func RegisterFakeBookServiceServer(s *grpc.Server, srv FakeBookServiceServer) {
	s.RegisterService(&_FakeBookService_serviceDesc, srv)
}

func _FakeBookService_AddFakeNews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FakeNewsRequestWrapper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FakeBookServiceServer).AddFakeNews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FakeBookService/AddFakeNews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FakeBookServiceServer).AddFakeNews(ctx, req.(*FakeNewsRequestWrapper))
	}
	return interceptor(ctx, in, info, handler)
}

func _FakeBookService_DeleteFakeNews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FakeNewsRequestWrapper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FakeBookServiceServer).DeleteFakeNews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FakeBookService/DeleteFakeNews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FakeBookServiceServer).DeleteFakeNews(ctx, req.(*FakeNewsRequestWrapper))
	}
	return interceptor(ctx, in, info, handler)
}

func _FakeBookService_RateFakeNews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RatingRequestWrapper)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FakeBookServiceServer).RateFakeNews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FakeBookService/RateFakeNews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FakeBookServiceServer).RateFakeNews(ctx, req.(*RatingRequestWrapper))
	}
	return interceptor(ctx, in, info, handler)
}

func _FakeBookService_ViewFakeNews_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FakeNewsId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FakeBookServiceServer).ViewFakeNews(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FakeBookService/ViewFakeNews",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FakeBookServiceServer).ViewFakeNews(ctx, req.(*FakeNewsId))
	}
	return interceptor(ctx, in, info, handler)
}

func _FakeBookService_HealthCheck_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FakeBookServiceServer).HealthCheck(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.FakeBookService/HealthCheck",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FakeBookServiceServer).HealthCheck(ctx, req.(*HealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FakeBookService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FakeBookService",
	HandlerType: (*FakeBookServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddFakeNews",
			Handler:    _FakeBookService_AddFakeNews_Handler,
		},
		{
			MethodName: "DeleteFakeNews",
			Handler:    _FakeBookService_DeleteFakeNews_Handler,
		},
		{
			MethodName: "RateFakeNews",
			Handler:    _FakeBookService_RateFakeNews_Handler,
		},
		{
			MethodName: "ViewFakeNews",
			Handler:    _FakeBookService_ViewFakeNews_Handler,
		},
		{
			MethodName: "HealthCheck",
			Handler:    _FakeBookService_HealthCheck_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/v1/fakebookservice.proto",
}
